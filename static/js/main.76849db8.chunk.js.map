{"version":3,"sources":["JS/Title.js","JS/StatBar.js","JS/HeroList.js","JS/SubmitButton.js","JS/HeroBox.js","JS/ResetButton.js","JS/Game.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","id","alt","src","React","Component","StatBar","props","state","this","statsValue","Speed","Stealth","Strength","Durability","Skills","HeroList","backgroundColor","width","borderRadius","list","heroList","map","ele","isHeroSelected","key","Key","style","onClick","handleClick","Name","Designation","Image","SubmitButton","handleCompareClick","HeroBox","DCHeroes","ResetButton","handleResetClick","HeroListJSON","require","DCHeroListJSON","Game","DCHeroList","SelectCount","CurrentHero","ShownStats","modalState","winModal","lostModal","componentDidMount","bind","handleResetButton","handleCompareButton","filteredHeroes","filter","val","right_Speed","right_Stealth","right_Strength","right_Durability","right_Skills","forEach","hero","parseInt","isRightSpeed","isRightStealth","isRightStrength","isRightDurability","isRightSkills","setState","setInterval","window","location","reload","i","length","toString","Date","now","tempHeroList","j","index","Math","floor","random","DCHero","tempList","statList","speed","stealth","strength","durability","skills","element","isElementSelected","currentSelectCount","spd","stl","str","dur","skl","console","log","display","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.76849db8.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../CSS/Title.css';\r\n\r\nclass Title extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Title\">\r\n                <div id=\"major\">\r\n                    <img id=\"avengers\" alt=\"avengers-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Symbol_from_Marvel%27s_The_Avengers_logo.svg\"></img>\r\n                    <div>Versus</div>\r\n                    <img id=\"justice\" alt=\"justice-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/bb/Justice_League_2017_Movie_Logo.svg\"></img>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nimport '../CSS/StatBar.css';\r\n\r\nclass StatBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"StatBar\">\r\n            <span className=\"stats\">\r\n                Speed: {this.props.statsValue.Speed}pts</span>\r\n            <span className=\"stats\">\r\n                Stealth: {this.props.statsValue.Stealth}pts</span>\r\n            <span className=\"stats\">\r\n                Strength: {this.props.statsValue.Strength}pts</span>\r\n            <span className=\"stats\">\r\n                Durability: {this.props.statsValue.Durability}pts</span>\r\n            <span className=\"stats\">\r\n                Skills: {this.props.statsValue.Skills}pts</span>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default StatBar;","import React from 'react';\r\n\r\nimport '../CSS/HeroList.css';\r\n//Its the big box.\r\nclass HeroList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            backgroundColor: \"#00909e\",\r\n            width: \"150px\",\r\n            borderRadius: \"8px\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var heroList = this.props.heroList;\r\n        var list = heroList.map((ele) => {\r\n            if (ele.isHeroSelected) {\r\n                return <div className=\"heroDiv\" key={ele.Key} style={{ backgroundColor: this.state.backgroundColor, width: this.state.width, borderRadius: this.state.borderRadius }} onClick={() => this.props.handleClick(ele.Key)}>\r\n                    <div className=\"eleName\">{ele.Name}</div>\r\n                    <div className=\"eleDesignation\">{ele.Designation}</div>\r\n                    <img className=\"eleImage\" alt=\"img\" src={ele.Image}></img>\r\n                </div>\r\n            } else {\r\n                return <div className=\"heroDiv\" key={ele.Key} onClick={() => this.props.handleClick(ele.Key)}>\r\n                    <div className=\"eleName\">{ele.Name}</div>\r\n                    <div className=\"eleDesignation\">{ele.Designation}</div>\r\n                    <img className=\"eleImage\" alt=\"img\" src={ele.Image}></img>\r\n                </div>\r\n            }\r\n        })\r\n        return (<div className=\"HeroList\">\r\n            {list}\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default HeroList;","import React from 'react';\r\n\r\nimport '../CSS/SubmitButton.css';\r\n\r\nclass SubmitButton extends React.Component {\r\n    render() {\r\n        return (<div className=\"SubmitButton\">\r\n            <div>\r\n                <button id=\"submitButton\" onClick={this.props.handleCompareClick}>COMPARE</button>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\n\r\nimport '../CSS/HeroBox.css';\r\n\r\nclass HeroBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var heroList = this.props.DCHeroes;\r\n        var list = heroList.map((ele) => {\r\n            return <div className=\"cardDiv\" key={ele.Key}>\r\n                <div className=\"cardName\">{ele.Name}</div>\r\n                <div className=\"cardDesignation\">{ele.Designation}</div>\r\n                <img className=\"cardImage\" alt=\"img\" src={ele.Image}></img>\r\n            </div>\r\n        })\r\n        return (\r\n            <div className=\"HeroBox\">\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroBox;","import React from 'react';\r\n\r\nimport '../CSS/ResetButton.css';\r\n\r\nclass ResetButton extends React.Component {\r\n    render() {\r\n        return (<div className=\"ResetButton\">\r\n            <div>\r\n                <button id=\"resetButton\" onClick={this.props.handleResetClick}>RESET</button>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ResetButton;","import React from 'react';\r\nimport '../CSS/Game.css';\r\n\r\nimport StatBar from './StatBar';\r\nimport HeroList from './HeroList';\r\nimport SubmitButton from './SubmitButton';\r\nimport HeroBox from './HeroBox';\r\nimport ResetButton from './ResetButton';\r\n\r\nconst HeroListJSON = require('../JSON/Marvel.json');\r\nconst DCHeroListJSON = require('../JSON/Justice.json');\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            HeroList: [],\r\n            DCHeroList: [],\r\n            SelectCount: 0,\r\n            CurrentHero: {\r\n                Name: \"\",\r\n                Designation: \"\",\r\n                Image: \"\",\r\n                Speed: \"\",\r\n                Stealth: \"\",\r\n                Strength: \"\",\r\n                Durability: \"\",\r\n                Skills: \"\",\r\n                Key: \"\",\r\n                isHeroSelected: false\r\n            },\r\n            ShownStats: {\r\n                Speed: 0,\r\n                Stealth: 0,\r\n                Strength: 0,\r\n                Durability: 0,\r\n                Skills: 0\r\n            },\r\n            modalState: \"none\",\r\n            winModal: \"none\",\r\n            lostModal: \"none\"\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleResetButton = this.handleResetButton.bind(this);\r\n        this.handleCompareButton = this.handleCompareButton.bind(this);\r\n    }\r\n\r\n    async handleCompareButton() {\r\n        var filteredHeroes = this.state.HeroList.filter(val => val.isHeroSelected);\r\n        var right_Speed = 0, right_Stealth = 0, right_Strength = 0, right_Durability = 0, right_Skills = 0;\r\n        filteredHeroes.forEach(hero => {\r\n            right_Speed = parseInt(right_Speed) + parseInt(hero.Speed);\r\n            right_Stealth = parseInt(right_Stealth) + parseInt(hero.Stealth);\r\n            right_Strength = parseInt(right_Strength) + parseInt(hero.Strength);\r\n            right_Durability = parseInt(right_Durability) + parseInt(hero.Durability);\r\n            right_Skills = parseInt(right_Skills) + parseInt(hero.Skills);\r\n        });\r\n        var isRightSpeed = false, isRightStealth = false, isRightStrength = false, isRightDurability = false, isRightSkills = false;\r\n        if (parseInt(this.state.ShownStats.Speed) <= right_Speed) {\r\n            isRightSpeed = true;\r\n        }\r\n        if (parseInt(this.state.ShownStats.Stealth) <= right_Stealth) {\r\n            isRightStealth = true;\r\n        }\r\n        if (parseInt(this.state.ShownStats.Strength) <= right_Strength) {\r\n            isRightStrength = true;\r\n        }\r\n        if (parseInt(this.state.ShownStats.Durability) <= right_Durability) {\r\n            isRightDurability = true;\r\n        }\r\n        if (parseInt(this.state.ShownStats.Skills) <= right_Skills) {\r\n            isRightSkills = true;\r\n        }\r\n        if (isRightSpeed && isRightStealth && isRightDurability && isRightStrength && isRightSkills) {\r\n            this.setState({\r\n                winModal: \"block\"\r\n            })\r\n            setInterval(() => {\r\n                this.setState({ modalState: \"none\" });\r\n                window.location.reload();\r\n            }, 5000);\r\n        }\r\n        else {\r\n            this.setState({\r\n                lostModal: \"block\"\r\n            })\r\n            setInterval(() => {\r\n                this.setState({ lostModal: \"none\" });\r\n                window.location.reload();\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //This method if for setting the state with data from the JSON.\r\n        for (var i = 0; i < HeroListJSON.length; i++) {\r\n            await this.setState({\r\n                CurrentHero: {\r\n                    Name: HeroListJSON[i].Name,\r\n                    Designation: HeroListJSON[i].Designation,\r\n                    Image: HeroListJSON[i].Image,\r\n                    Speed: HeroListJSON[i].Speed.toString(),\r\n                    Stealth: HeroListJSON[i].Stealth.toString(),\r\n                    Strength: HeroListJSON[i].Strength.toString(),\r\n                    Durability: HeroListJSON[i].Durability.toString(),\r\n                    Skills: HeroListJSON[i].Skills.toString(),\r\n                    Key: Date.now(),\r\n                    isHeroSelected: false\r\n                }\r\n            })\r\n            var tempHeroList = [...this.state.HeroList, this.state.CurrentHero];\r\n            this.setState({\r\n                HeroList: tempHeroList\r\n            })\r\n        }\r\n        //Update DC HeroList\r\n        for (var j = 0; j < 5; j++) {\r\n            var index = Math.floor(Math.random() * DCHeroListJSON.length);\r\n            var DCHero = {\r\n                Name: DCHeroListJSON[index].Name,\r\n                Designation: DCHeroListJSON[index].Designation,\r\n                Image: DCHeroListJSON[index].Image,\r\n                Speed: DCHeroListJSON[index].Speed.toString(),\r\n                Stealth: DCHeroListJSON[index].Stealth.toString(),\r\n                Strength: DCHeroListJSON[index].Strength.toString(),\r\n                Durability: DCHeroListJSON[index].Durability.toString(),\r\n                Skills: DCHeroListJSON[index].Skills.toString(),\r\n                Key: Date.now()\r\n            }\r\n\r\n            var tempList = [...this.state.DCHeroList, DCHero];\r\n            await this.setState({\r\n                DCHeroList: tempList\r\n            })\r\n        }\r\n        //Update stats\r\n        var statList = this.state.DCHeroList;\r\n        var speed = 0, stealth = 0, strength = 0, durability = 0, skills = 0;\r\n        statList.forEach(element => {\r\n            speed = parseInt(speed) + parseInt(element.Speed);\r\n            stealth = parseInt(stealth) + parseInt(element.Stealth);\r\n            strength = parseInt(strength) + parseInt(element.Strength);\r\n            durability = parseInt(durability) + parseInt(element.Durability);\r\n            skills = parseInt(skills) + parseInt(element.Skills);\r\n        });\r\n        await this.setState({\r\n            ShownStats: {\r\n                Speed: speed,\r\n                Stealth: stealth,\r\n                Strength: strength,\r\n                Durability: durability,\r\n                Skills: skills\r\n            }\r\n        })\r\n    }\r\n\r\n    async handleResetButton() {\r\n        //Update DC HeroList when the ResetButton is triggered.\r\n        await this.setState({\r\n            DCHeroList: []\r\n        })\r\n        for (var j = 0; j < 5; j++) {\r\n            var index = Math.floor(Math.random() * DCHeroListJSON.length);\r\n            var DCHero = {\r\n                Name: DCHeroListJSON[index].Name,\r\n                Designation: DCHeroListJSON[index].Designation,\r\n                Image: DCHeroListJSON[index].Image,\r\n                Speed: DCHeroListJSON[index].Speed.toString(),\r\n                Stealth: DCHeroListJSON[index].Stealth.toString(),\r\n                Strength: DCHeroListJSON[index].Strength.toString(),\r\n                Durability: DCHeroListJSON[index].Durability.toString(),\r\n                Skills: DCHeroListJSON[index].Skills.toString(),\r\n                Key: Date.now()\r\n            }\r\n            var tempList = [...this.state.DCHeroList, DCHero];\r\n            this.setState({\r\n                DCHeroList: tempList\r\n            })\r\n        }\r\n        //Update stats\r\n        var statList = this.state.DCHeroList;\r\n        var speed = 0, stealth = 0, strength = 0, durability = 0, skills = 0;\r\n        statList.forEach(element => {\r\n            speed = parseInt(speed) + parseInt(element.Speed);\r\n            stealth = parseInt(stealth) + parseInt(element.Stealth);\r\n            strength = parseInt(strength) + parseInt(element.Strength);\r\n            durability = parseInt(durability) + parseInt(element.Durability);\r\n            skills = parseInt(skills) + parseInt(element.Skills);\r\n        });\r\n        this.setState({\r\n            ShownStats: {\r\n                Speed: speed,\r\n                Stealth: stealth,\r\n                Strength: strength,\r\n                Durability: durability,\r\n                Skills: skills\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick(key) {\r\n        //This method will update color for clicking in the card.\r\n        var tempHeroList = this.state.HeroList;\r\n        var isElementSelected = false;\r\n        tempHeroList.forEach(element => {\r\n            if (element.Key === key) {\r\n                isElementSelected = element.isHeroSelected;\r\n            }\r\n        });\r\n        if (!isElementSelected) {\r\n            if (this.state.SelectCount < 5) {\r\n                var currentSelectCount = this.state.SelectCount + 1;\r\n                tempHeroList.forEach(element => {\r\n                    if (element.Key === key) {\r\n                        element.isHeroSelected = true;\r\n                    }\r\n                });\r\n                this.setState({\r\n                    HeroList: tempHeroList,\r\n                    SelectCount: currentSelectCount\r\n                })\r\n            }\r\n            else {\r\n                //Set alert of only 5 cards selection required.\r\n                this.setState({\r\n                    modalState: \"block\"\r\n                })\r\n                setInterval(() => {\r\n                    this.setState({ modalState: \"none\" });\r\n                }, 3000);\r\n            }\r\n        }\r\n        else {\r\n            currentSelectCount = this.state.SelectCount - 1;\r\n            tempHeroList.forEach(element => {\r\n                if (element.Key === key) {\r\n                    element.isHeroSelected = false;\r\n                }\r\n            });\r\n            this.setState({\r\n                HeroList: tempHeroList,\r\n                SelectCount: currentSelectCount\r\n            })\r\n        }\r\n\r\n        var filteredHeroes = this.state.HeroList.filter(val => val.isHeroSelected);\r\n        var spd = 0, stl = 0, str = 0, dur = 0, skl = 0;\r\n        filteredHeroes.forEach(element => {\r\n            spd = parseInt(spd) + parseInt(element.Speed);\r\n            stl = parseInt(stl) + parseInt(element.Stealth);\r\n            str = parseInt(str) + parseInt(element.Strength);\r\n            dur = parseInt(dur) + parseInt(element.Durability);\r\n            skl = parseInt(skl) + parseInt(element.Skills);\r\n        });\r\n        console.log(\"Speed: \" + spd + \"Stealth: \" + stl + \"Strength: \" + str + \"Durability: \" + dur + \"Skills: \" + skl);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Game\">\r\n                <div id=\"WinModal\" style={{ display: this.state.winModal }}>\r\n                    <p>You Won!</p>\r\n                </div>\r\n                <div id=\"LostModal\" style={{ display: this.state.lostModal }}>\r\n                    <p>You Lose!</p>\r\n                </div>\r\n                <div id=\"Modal\" style={{ display: this.state.modalState }}>\r\n                    <p>Can Select only 5 heroes!<br></br>Unselect one if you wanna change</p>\r\n                </div>\r\n                <StatBar statsValue={this.state.ShownStats} />\r\n                <div id=\"majorScreen\">\r\n                    <HeroList heroList={this.state.HeroList} handleClick={this.handleClick} />\r\n                    <HeroBox DCHeroes={this.state.DCHeroList} />\r\n                </div>\r\n                <div id=\"ButtonSet\">\r\n                    <SubmitButton handleCompareClick={this.handleCompareButton} />\r\n                    <ResetButton handleResetClick={this.handleResetButton} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\n\nimport Title from './JS/Title';\nimport Game from './JS/Game';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Title />\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}